name: To check matrix cluster name
on: workflow_dispatch

jobs:
  matrix-check:
    strategy:
      fail-fast: false
      matrix:
        cluster:
          - ubuntu-latest
          - windows-latest
          # Add more clusters here as needed
    runs-on: ${{ matrix.cluster }}

    steps:
      - name: Deploy to ${{ matrix.cluster }}
        id: deploy
        #continue-on-error: true
        shell: bash
        run: |
          echo "Deploying on ${{ matrix.cluster }}"

          # Simulate failure on windows-latest for demo
          if [[ "${{ matrix.cluster }}" == "windows-latest" ]]; then
              exit 1
          fi

      - name: Write status file
        id: write-status
        if: always()
        shell: bash
        run: |
          if [[ "${{ steps.deploy.outcome }}" == "failure" ]]; then
            status=failed
          else
            status=success
          fi
          echo "${{ matrix.cluster }}=${status}" > status.txt

      - name: Upload status artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ matrix.cluster }}
          path: status.txt

  aggregate-status:
    needs: matrix-check
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all status artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./statuses

      - name: Parse and display failed clusters
        shell: bash
        run: |
             failed_clusters=()

              while read -r status_file; do
                cluster=$(cut -d'=' -f1 "$status_file")
                state=$(cut -d'=' -f2 "$status_file")
                if [[ "$state" == "failed" ]]; then
                  failed_clusters+=("$cluster")
                fi
              done < <(find ./statuses -name status.txt)

              if [ ${#failed_clusters[@]} -eq 0 ]; then
                echo "No failed clusters."
              else
                echo "Failed clusters: ${failed_clusters[*]}"
              fi
