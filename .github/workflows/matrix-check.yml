name: To check matrix cluster name
on: workflow_dispatch

jobs:
  matrix-check:
    strategy:
      fail-fast: false
      matrix:
        cluster:
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.cluster }}

    steps:
      - name: Deploy to ${{ matrix.cluster }}
        id: deploy
        continue-on-error: true
        run: |
          echo "Deploying on ${{ matrix.cluster }}"

          if [[ "${{ matrix.cluster }}" == "windows-latest" ]]; then
              exit 1
          fi

      - name: Write status file
        id: write-status
        if: always()
        shell: bash
        run: |
          status=success
          if [[ "${{ matrix.cluster }}" == "windows-latest" ]]; then
              exit 1
          fi
          echo "${{ matrix.cluster }}=${status}" > status.txt

      - name: Upload status artifact
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ matrix.cluster }}
          path: status.txt

  aggregate-status:
    needs: matrix-check
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Download ubuntu status artifact
        uses: actions/download-artifact@v4
        with:
          name: status-ubuntu-latest
          path: ./statuses
      - name: Download windows status artifact
        uses: actions/download-artifact@v4
        with:
          name: status-windows-latest
          path: ./statuses

      - name: Display failed clusters
        run: |
          failed_clusters=()
          for file in ./statuses/status-*.txt; do
            cluster=$(cut -d'=' -f1 "$file")
            state=$(cut -d'=' -f2 "$file")
            if [[ "$state" == "failed" ]]; then
              if [[ "$cluster" == "ubuntu-latest" ]]; then
                failed_clusters+=(Ubuntu)
              elif [[ "$cluster" == "windows-latest" ]]; then
                failed_clusters+=(Windows)
              fi
            fi
          done

          echo "Failed clusters: ${failed_clusters[*]}"
